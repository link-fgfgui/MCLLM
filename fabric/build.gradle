plugins {
    id 'io.github.goooler.shadow'
}
architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"
    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"

    implementation "com.openai:openai-java:$rootProject.openai_java_version"
    shadowBundle "com.openai:openai-java:$rootProject.openai_java_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')
}

def toOperatorBased(String mavenRange) {
    def m = mavenRange =~ /([\[\(])\s*([^,]+)\s*,\s*([^,\]\)]*)\s*([\]\)])/
    if (!m) return mavenRange

    def includeLower = m[0][1] == '['
    def includeUpper = m[0][4] == ']'
    def lower = m[0][2].trim()
    def upper = m[0][3].trim()

    def parts = []
    parts << (includeLower ? ">=${lower}" : ">${lower}")
    if (upper) {
        parts << (includeUpper ? "<=${upper}" : "<${upper}")
    }
    return parts.join(' ')
}
// 读取、转换并覆盖
project.minecraft_version_range = toOperatorBased(project.minecraft_version_range)
project.architectury_version_range = toOperatorBased(project.architectury_version_range)
project.fabric_loader_version_range = toOperatorBased(project.fabric_loader_version_range)
project.neoforge_loader_version_range = toOperatorBased(project.neoforge_loader_version_range)
project.kotlin_runtime_version_range_forge = toOperatorBased(project.kotlin_runtime_version_range_forge)
project.authors = project.authors
        .split(',')                    // 拆分
        .collect { it.trim() }         // 去掉空白
        .collect { "\"${it}\"" }       // 给每个名字加上双引号
        .join(',')                     // 用逗号拼回

processResources {
    inputs.property 'version', project.version

    filesMatching("fabric.mod.json") {
        expand(project.properties)
    }
}

shadowJar {
    minimize()
    exclude 'com/github/victools/**'
    exclude 'com/openai/services/async/**'
    exclude 'com/openai/models/evals/**'
    exclude 'com/openai/models/responses/**'
    exclude 'com/openai/models/batches/**'
    exclude 'com/openai/models/evals/**'
    exclude 'com/openai/models/audio/**'
    exclude 'com/openai/models/containers/**'
    exclude 'com/openai/models/embeddings/**'
    exclude 'com/openai/models/files/**'
    exclude 'com/openai/models/finetuning/**'
    exclude 'com/openai/models/graders/**'
    exclude 'com/openai/models/images/**'
    exclude 'com/openai/models/moderations/**'
    exclude 'com/openai/models/uploads/**'
    exclude 'com/openai/models/vectorstores/**'
    exclude 'com/openai/models/chat/completions/messages/**'
    exclude 'com/openai/models/models/**'
    exclude 'com/openai/services/blocking/audio/**'
    exclude 'com/openai/services/blocking/containers/**'
    exclude 'com/openai/services/blocking/containers/files/**'
    exclude 'com/openai/services/blocking/evals/**'
    exclude 'com/openai/services/blocking/evals/runs/**'
    exclude 'com/openai/services/blocking/finetuning/**'
    exclude 'com/openai/services/blocking/finetuning/alpha/**'
    exclude 'com/openai/services/blocking/finetuning/checkpoints/**'
    exclude 'com/openai/services/blocking/finetuning/jobs/**'
    exclude 'com/openai/services/blocking/graders/**'
    exclude 'com/openai/services/blocking/responses/**'
    exclude 'com/openai/services/blocking/uploads/**'
    exclude 'com/openai/services/blocking/vectorstores/**'
    exclude 'okhttp3/internal/platform/android/**'
    exclude 'okhttp3/internal/publicsuffix/**'
    exclude 'okhttp3/internal/ws/**'
    exclude 'okhttp3/logging/**'
    exclude 'com/fasterxml/classmate/**'
    exclude 'com/fasterxml/jackson/core/filter/**'
    exclude 'com/fasterxml/jackson/core/format/**'
    exclude 'com/fasterxml/jackson/core/internal/**'
    exclude 'com/fasterxml/jackson/core/internal/shaded/**'
    exclude 'com/fasterxml/jackson/core/internal/shaded/fdp/**'
    exclude 'com/fasterxml/jackson/core/internal/shaded/fdp/v2_18_2/**'
    exclude 'com/fasterxml/jackson/core/io/schubfach/**'
    exclude 'com/fasterxml/jackson/databind/jdk14/**'
    exclude 'com/fasterxml/jackson/datatype/jsr310/util/**'
    exclude 'org/apache/hc/**'
    exclude 'org/slf4j/**'
    exclude 'org/apache/logging/log4j/**'
    exclude 'org/objectweb/asm/**'
    exclude 'com/google/errorprone/**'
    exclude 'org/checkerframework/**'
    exclude 'org/jetbrains/annotations/**'
    exclude 'org/junit/**'
    exclude 'kotlin/**'
    exclude 'mozilla/**'
    exclude 'META-INF/com.android.tools/**'
    exclude 'META-INF/proguard/**'
    exclude 'META-INF/versions/**'
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
